from db import get_connection
import re

def handle_intent(intent, user_input):
    if intent == "welcome":
        return (
            "\U0001F389 Xin ch√†o! M√¨nh l√† tr·ª£ l√Ω SportPro.\n"
            "B·∫°n mu·ªën:\n"
            "1. T∆∞ v·∫•n s·∫£n ph·∫©m\n"
            "2. Tra c·ª©u ƒë∆°n h√†ng\n"
            "3. T√¨m c·ª≠a h√†ng\n"
            "4. Ch√≠nh s√°ch mua h√†ng"
        )

    # ---------- 1. T∆Ø V·∫§N S·∫¢N PH·∫®M ----------
    elif intent == "product_advice":
        return (
            "\U0001F4E6 B·∫°n mu·ªën t∆∞ v·∫•n s·∫£n ph·∫©m n√†o?\n"
            "B·∫°n c√≥ th·ªÉ nh·∫≠p t√™n s·∫£n ph·∫©m (v√≠ d·ª•: gi√†y, qu·∫ßn √°o, t√∫i),\n"
            "ho·∫∑c t√™n th∆∞∆°ng hi·ªáu nh∆∞ Nike, Adidas ƒë·ªÉ ƒë∆∞·ª£c g·ª£i √Ω."
        )

    elif intent == "product_advice_details":
        keyword = user_input.lower()
        brand_links = {
            "nike": "https://sportpro.vn/collections/nike",
            "adidas": "https://sportpro.vn/collections/adidas",
            "converse": "https://sportpro.vn/collections/converse"
        }

        for brand in brand_links:
            if brand in keyword:
                return f"\U0001F525 B·ªô s∆∞u t·∫≠p {brand.capitalize()}: {brand_links[brand]}"

        try:
            with get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("""
                        SELECT product_name, price, color, size, image_url
                        FROM products
                        WHERE product_name LIKE ? OR color LIKE ? OR size LIKE ?
                    """, ('%' + keyword + '%', '%' + keyword + '%', '%' + keyword + '%'))
                    columns = [column[0] for column in cursor.description]
                    results = [dict(zip(columns, row)) for row in cursor.fetchall()]
        except Exception as e:
            # Log error n·∫øu c√≥ h·ªá th·ªëng logging (ƒë·ªÅ xu·∫•t)
            # logger.error(f"L·ªói truy v·∫•n s·∫£n ph·∫©m: {e}")
            return f"‚ö†Ô∏è L·ªói h·ªá th·ªëng khi t√¨m s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i sau."

        if results:
            return "\n\n".join([
                f"\u2714 {row['product_name']}\nM√†u: {row['color']} | Size: {row['size']}\nGi√°: {row['price']} VND\n·∫¢nh: {row['image_url']}"
                for row in results
            ])
        else:
            return (
                "\u274C Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ph√π h·ª£p v·ªõi t·ª´ kh√≥a b·∫°n nh·∫≠p.\n"
                "B·∫°n c√≥ th·ªÉ th·ª≠ l·∫°i v·ªõi t√™n s·∫£n ph·∫©m ho·∫∑c th∆∞∆°ng hi·ªáu kh√°c nh∆∞: '√°o th·ªÉ thao', 'gi√†y nike', 't√∫i adidas'..."
            )

    # ---------- 2. TRA C·ª®U ƒê∆†N H√ÄNG ----------
    elif intent == "order_check_start":
        return "\U0001F4E6 Vui l√≤ng nh·∫≠p m√£ ƒë∆°n h√†ng c·ªßa b·∫°n (v√≠ d·ª•: SP20230501):"

    elif intent == "order_check_details":
        order_id = user_input.strip()
        try:
            with get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("""
                        SELECT o.order_id, o.status, o.total_amount, o.order_date, c.full_name, o.delivery_address
                        FROM orders o
                        JOIN customers c ON o.customer_id = c.customer_id
                        WHERE o.order_id = ?
                    """, (order_id,))
                    columns = [column[0] for column in cursor.description]
                    row = cursor.fetchone()
        except Exception as e:
            return f"‚ö†Ô∏è L·ªói h·ªá th·ªëng khi tra c·ª©u ƒë∆°n h√†ng. Vui l√≤ng th·ª≠ l·∫°i sau."

        if row:
            result = dict(zip(columns, row))
            return (
                f"\U0001F4CB M√£ ƒë∆°n: {result['order_id']}\n"
                f"\U0001F464 Kh√°ch: {result['full_name']}\n"
                f"üìÖ Ng√†y ƒë·∫∑t: {result['order_date']}\n"
                f"\U0001F9FE Tr·∫°ng th√°i: {result['status']}\n"
                f"\U0001F4B0 T·ªïng ti·ªÅn: {result['total_amount']} VND\n"
                f"\U0001F4CD Giao ƒë·∫øn: {result['delivery_address']}"
            )
        else:
            return "\u274C M√£ ƒë∆°n kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng t·ªìn t·∫°i. Vui l√≤ng ki·ªÉm tra l·∫°i."

    # ---------- 3. T√åM C·ª¨A H√ÄNG ----------
    elif intent == "store_locator":
        keyword = user_input.lower()
        try:
            with get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("""
                        SELECT store_name, address, phone, opening_hours
                        FROM stores
                        WHERE city LIKE ?
                    """, ('%' + keyword + '%',))
                    columns = [column[0] for column in cursor.description]
                    results = [dict(zip(columns, row)) for row in cursor.fetchall()]
        except Exception as e:
            return f"‚ö†Ô∏è L·ªói h·ªá th·ªëng khi t√¨m c·ª≠a h√†ng. Vui l√≤ng th·ª≠ l·∫°i sau."

        if results:
            return "\n\n".join([
                f"\U0001F3EC {row['store_name']}\n\U0001F4CD {row['address']}\n\U0001F4DE {row['phone']}\nüïí Gi·ªù m·ªü c·ª≠a: {row['opening_hours']}"
                for row in results
            ])
        else:
            return "\u274C M√¨nh kh√¥ng t√¨m th·∫•y c·ª≠a h√†ng n√†o ·ªü khu v·ª±c b·∫°n cung c·∫•p. B·∫°n th·ª≠ t√™n kh√°c nh√©!"

    # ---------- 4. H·ªéI V·ªÄ CH√çNH S√ÅCH ----------
    elif intent == "faq":
        keyword = user_input.lower()
        try:
            with get_connection() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("""
                        SELECT question, answer FROM faqs WHERE topic LIKE ?
                    """, ('%' + keyword + '%',))
                    columns = [column[0] for column in cursor.description]
                    results = [dict(zip(columns, row)) for row in cursor.fetchall()]
        except Exception as e:
            return f"‚ö†Ô∏è L·ªói h·ªá th·ªëng khi t√¨m hi·ªÉu ch√≠nh s√°ch. Vui l√≤ng th·ª≠ l·∫°i sau."

        if results:
            return "\n\n".join([
                f"\u2753 {row['question']}\n\U0001F4A1 {row['answer']}" for row in results
            ])
        else:
            return "\u274C M√¨nh ch∆∞a c√≥ th√¥ng tin v·ªÅ ch√≠nh s√°ch ƒë√≥. B·∫°n c√≥ th·ªÉ h·ªèi: v·∫≠n chuy·ªÉn, ƒë·ªïi tr·∫£, b·∫£o h√†nh..."

    # ---------- M·∫∂C ƒê·ªäNH ----------
    else:
        return (
            "\U0001F916 M√¨nh ch∆∞a hi·ªÉu c√¢u h·ªèi c·ªßa b·∫°n.\n"
            "B·∫°n vui l√≤ng ch·ªçn t·ª´ menu ch√≠nh b·∫±ng c√°ch nh·∫Øn 'menu'."
        )
